<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>ubuntu 16.04 安装 samba</title>
      <link href="/2016/11/15/ubuntu16.04%E5%AE%89%E8%A3%85samba/"/>
      <url>/2016/11/15/ubuntu16.04%E5%AE%89%E8%A3%85samba/</url>
      <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install samba</span><br><span class="line">cd /etc/samba</span><br><span class="line">sudo cp smb.conf smb.conf.bak</span><br><span class="line">sudo vi smb.conf</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> crispin samba</span><br><span class="line">[RootFS]</span><br><span class="line">comment = Root filesystem</span><br><span class="line">path = /</span><br><span class="line">browseable = yes</span><br><span class="line">writable = yes</span><br><span class="line">valid users = crispin</span><br></pre></td></tr></table></figure><h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser usrsamba (crispin安装时已经添加了，可以不执行该命令)</span><br><span class="line">sudo smbpasswd -a usrsamba</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> samba </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>骇客交锋</title>
      <link href="/2015/06/15/%E9%AA%87%E5%AE%A2%E4%BA%A4%E9%94%8B/"/>
      <url>/2015/06/15/%E9%AA%87%E5%AE%A2%E4%BA%A4%E9%94%8B/</url>
      <content type="html"><![CDATA[<blockquote><p>在影评家的心目中，迈克尔·曼的《骇客交锋》并不是什么杰作。但是，当 Google Chrome 安全团队的主管 Parisa Tabriz 组织了 200 多名安全专家观看了首映之后，这些人一致认为，它是一部不错的电影，甚至可能是最好的黑客电影之一。</p></blockquote>]]></content>
      
      <categories>
          
          <category> 娱乐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MT7628an WPS配置命令</title>
      <link href="/2015/04/19/MT7628an%20WPS%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4/"/>
      <url>/2015/04/19/MT7628an%20WPS%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h2 id="Server-Registrar"><a href="#Server-Registrar" class="headerlink" title="Server / Registrar"></a>Server / Registrar</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iwpriv ra0 set WscConfMode=7</span><br><span class="line">iwpriv ra0 set WscMode=2</span><br><span class="line">iwpriv ra0 set WscGetConf=1</span><br></pre></td></tr></table></figure><h2 id="Client-Enrollee"><a href="#Client-Enrollee" class="headerlink" title="Client /Enrollee"></a>Client /Enrollee</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ifconfig apcli0 up</span><br><span class="line">iwpriv apcli0 set WscConfMode=1</span><br><span class="line">iwpriv apcli0 set WscMode=2</span><br><span class="line">iwpriv apcli0 set WscGetConf=1</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WPS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Openwrt文件系统中/etc/config配置文件的动态生成</title>
      <link href="/2015/04/12/Openwrt%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%B8%ADconfig%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90/"/>
      <url>/2015/04/12/Openwrt%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%B8%ADconfig%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90/</url>
      <content type="html"><![CDATA[<p>openwrt的network文件，或者说是在/etc/config目录下的文件，都是动态生成的。 脚本的函数定义在package/base-files/files/lib/functions目录中，有以下几个文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ouyangping@ubuntu:~/openwrt-3.10.14/package/base-files/files/lib/functions$ ls</span><br><span class="line">leds.sh network.sh preinit.sh service.sh system.sh uci-defaults.sh</span><br></pre></td></tr></table></figure><p>其中uci-default.sh会生成默认的/et/config目录下的文件，而其他文件是它的<code>库</code></p>]]></content>
      
      <categories>
          
          <category> 工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openwrt </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Keep It Simple, Stupid!</title>
      <link href="/2012/05/09/Keep%20It%20Simple,Stupid!/"/>
      <url>/2012/05/09/Keep%20It%20Simple,Stupid!/</url>
      <content type="html"><![CDATA[<h2 id="Subject-Focus-on-Problems-vs-Focus-on-Solutions-–-Don’t-miss-reading"><a href="#Subject-Focus-on-Problems-vs-Focus-on-Solutions-–-Don’t-miss-reading" class="headerlink" title="Subject: Focus on Problems vs. Focus on Solutions – Don’t miss reading"></a>Subject: Focus on Problems vs. Focus on Solutions – Don’t miss reading</h2><blockquote><p><strong>One of the most memorable case studies on Japanese management was the case of the empty soap box, which happened in one of Japan’s biggest cosmetics companies. The company received a complaint that a consumer had bought a soap box that was empty. Immediately the authorities isolated the problem to the assembly line, which transported all the packaged soap to the delivery department. For some reason, one soap box went through the assembly line empty. Management asked its engineers to solve the problem.</strong></p><p>Post-haste, the engineers worked hard to devise an X-ray machine with high-resolution monitors manned by two people to watch all the soap boxes that passed through the line to make sure they were not empty. No doubt, they worked hard and they worked fast but they spent whoopee amount to do so.</p><p>But when a rank-and-file employee in a small company was posed with the same problem, did not get into complications of X-rays, etc but instead came out with another solution. He bought a strong industrial electric fan and pointed it at the assembly line. He switched the fan on, and as each soap box passed the fan, it simply blew the empty boxes out of the line.<br>Moral of the story: KISS (Keep It Simple,Stupid) i.e. always look for simple solutions. Devise the simplest possible solution that solves the problem.</p><p><strong>When NASA began the launch of astronauts into space, they found out that the pens wouldn’t work at zero gravity (Ink won’t flow down to the writing surface).</strong></p><p>In order to solve this problem, it took them one decade and $12 million. They developed a pen that worked at zero gravity, upside down, underwater, in practically any surface including crystal and in a temperature range from below freezing to over 300 degrees C.</p></blockquote><p><strong>And what did Russians do ………………………??</strong><br>Guest it!!<br>ANSWER: The Russians <code>used a Pencil</code> !!!</p>]]></content>
      
      
        <tags>
            
            <tag> 态度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>老鼠试毒瓶问题</title>
      <link href="/2012/04/05/%E8%80%81%E9%BC%A0%E8%AF%95%E6%AF%92%E7%93%B6%E9%97%AE%E9%A2%98/"/>
      <url>/2012/04/05/%E8%80%81%E9%BC%A0%E8%AF%95%E6%AF%92%E7%93%B6%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><blockquote><p>有 1000 个一模一样的瓶子，其中有 999 瓶是普通的水，有一瓶是毒药。任何喝下毒药的生物都会在一星期之后死亡。现在，你只有 10 只小白鼠和一星期的时间，如何检验出哪个瓶子里有毒药？</p></blockquote><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><blockquote><p>这个问题的答案也堪称经典：把瓶子从 0 到 999 依次编号，然后全部转换为 10 位二进制数。让第一只老鼠喝掉1到1000所有二进制数右起第一位是 1 的瓶子，让第二只老鼠喝掉所有二进制数右起第二位是 1 的瓶子，等等。一星期后，如果第一只老鼠死了，就知道毒药瓶子的二进制编号中，右起第一位是 1 ；如果第二只老鼠没死，就知道毒药瓶子的二进制编号中，右起第二位是 0 ……每只老鼠的死活都能确定出 10 位二进制数的其中一位，由此便可知道毒药瓶子的编号了。</p></blockquote><h2 id="进一步"><a href="#进一步" class="headerlink" title="进一步"></a>进一步</h2><p>现在，有意思的问题来了：如果你有两个星期的时间（换句话说你可以做两轮实验），为了从 1000 个瓶子中找出毒药，你最少需要几只老鼠？注意，在第一轮实验中死掉的老鼠，就无法继续参与第二次实验了。</p><blockquote><p>答案：7 只老鼠就足够了。事实上，7 只老鼠足以从 3^7 = 2187 个瓶子中找出毒药来。首先，把所有瓶子从 0 到 2186 编号，然后全部转换为 7 位三进制数。现在，让第一只老鼠喝掉所有三进制数右起第一位是 2 的瓶子，让第二只老鼠喝掉所有三进制数右起第二位是 2 的瓶子，等等。一星期之后，如果第一只老鼠死了，就知道毒药瓶子的三进制编号中，右起第一位是 2 ；如果第二只老鼠没死，就知道毒药瓶子的三进制编号中，右起第二位不是 2，只可能是 0 或者 1 ……也就是说，每只死掉的老鼠都用自己的生命确定出了，三进制编号中自己负责的那一位是 2 ；但每只活着的老鼠都只能确定，它所负责的那一位不是 2 。于是，问题就归约到了只剩一个星期时的情况。在第二轮实验里，让每只活着的老鼠继续自己未完成的任务，喝掉它负责的那一位是 1 的所有瓶子。再过一星期，毒药瓶子的三进制编号便能全部揭晓了。</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>类似地，我们可以证明， n 只小白鼠 t 周的时间可以从 (t+1)^n 个瓶子中检验出毒药来。</p><p>总结：<code>时间换取资源</code>(老鼠)。</p>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Build NFS Environment</title>
      <link href="/2009/10/12/Build%20NFS%20Environment/"/>
      <url>/2009/10/12/Build%20NFS%20Environment/</url>
      <content type="html"><![CDATA[<h2 id="Board-NFS-client"><a href="#Board-NFS-client" class="headerlink" title="Board - NFS client"></a>Board - NFS client</h2><h3 id="linux-kernel"><a href="#linux-kernel" class="headerlink" title="linux kernel"></a>linux kernel</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">File system -&gt; Network File System -&gt; NFS client support</span><br><span class="line">[*] NFS client support for NFS version 3</span><br><span class="line">[*]  NFS client support for the NFSv3 ACL protocol externel</span><br></pre></td></tr></table></figure><h3 id="busybox"><a href="#busybox" class="headerlink" title="busybox"></a>busybox</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Linux System Utilities -&gt; mount</span><br><span class="line">[*] Support mounting NFS file systems</span><br></pre></td></tr></table></figure><h3 id="mount"><a href="#mount" class="headerlink" title="mount"></a>mount</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o nolock 192.168.1.25:/home/crispin/rtl819x/users/boa/html /web</span><br></pre></td></tr></table></figure><h2 id="PC-NFS-server"><a href="#PC-NFS-server" class="headerlink" title="PC - NFS server"></a>PC - NFS server</h2><h3 id="install-software"><a href="#install-software" class="headerlink" title="install software"></a>install software</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nfs-kerenel-server nfs-common rpcbind</span><br></pre></td></tr></table></figure><h3 id="create-shared-path"><a href="#create-shared-path" class="headerlink" title="create shared path"></a>create shared path</h3><h3 id="configure-nfs-file"><a href="#configure-nfs-file" class="headerlink" title="configure nfs file"></a>configure nfs file</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add &apos;/home/crispin/rtl819x/users/boa/html * (rw, sync)&apos; to &apos;/etc/exports&apos;</span><br></pre></td></tr></table></figure><h3 id="start-nfs-server"><a href="#start-nfs-server" class="headerlink" title="start nfs server"></a>start nfs server</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/nfs-kernel-server restart</span><br><span class="line">sudo exportfs -a</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NFS </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>wireshark找不到网络接口的处理方法</title>
      <link href="/2009/09/02/Wireshark%E6%89%BE%E4%B8%8D%E5%88%B0%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3/"/>
      <url>/2009/09/02/Wireshark%E6%89%BE%E4%B8%8D%E5%88%B0%E7%BD%91%E7%BB%9C%E6%8E%A5%E5%8F%A3/</url>
      <content type="html"><![CDATA[<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net start npf</span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><blockquote><p>安装libpcap时选中开机启动</p></blockquote>]]></content>
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wireshark </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Vim和Source Insight切换</title>
      <link href="/2009/08/15/Vim%E5%92%8CSource%20Insight%E5%88%87%E6%8D%A2/"/>
      <url>/2009/08/15/Vim%E5%92%8CSource%20Insight%E5%88%87%E6%8D%A2/</url>
      <content type="html"><![CDATA[<h2 id="Source-Insight"><a href="#Source-Insight" class="headerlink" title="Source Insight"></a>Source Insight</h2><blockquote><p>在Source Insight中按F12调用gvim，打开对应文件，跳转到对应的行</p></blockquote><p><em>Step by step:</em><br>1.<code>Tools -&gt; Custom Commands... -&gt; Add..., New Command name</code> 随便写,我的是”Edit with Vim”<br>2.Run中写入 <code>&quot;D:\Programs\Vim\vim80\gvim.exe&quot; --remote-silent +%l %f</code><br>意思是在当前已经打开的gvim窗口里面打开当前的文件,并且跳转到指定行<br>%l为当前的行号,%f为文件名<br>使用 –remote-silent 的作用是,如果已经打开了对应文件,就不会打开第二次,而是在已经打开的文件里跳转到对应行<br>3.还是同一个对话框里面,选择<code>Keys-&gt;Assign New Key...-&gt;按F12</code>,如果你已经将F12设置给其他命令,选择其他的按键就行了<br>4.设置完毕</p><h2 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h2><p>在vim中调用source insight打开对应的文件:</p><blockquote><p><code>nnoremap &lt;silent&gt; &lt;F12&gt; :!start &quot;C:\Programs\Source Insight 4.0\sourceinsight4.exe&quot; -i +&lt;C-R&gt;=expand(line(&quot;.&quot;))&lt;CR&gt; %&lt;CR&gt;</code></p></blockquote><p>1.一定要加上start,否则调用source insight时弹出讨厌的dos窗口<br>2.-i表示在已经打开的souce insight中打开<br>3.+后面的部分是指定行号</p><p>这样使用F12就可以在vim和source insight之间切换了 :)</p>]]></content>
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
